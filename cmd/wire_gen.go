// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"application/config"
	"application/internal/biz"
	"application/internal/data"
	"application/internal/server"
	"application/internal/service"
	"github.com/gin-gonic/gin"
	"log/slog"
)

// Injectors from wire.go:

func wireApp(cfg *config.ViperConfig, logger *slog.Logger) (*gin.Engine, error) {
	dataSource, err := data.NewDataSource(logger, cfg)
	if err != nil {
		return nil, err
	}
	healthzRepoInterface := data.NewHealthzRepo(logger, dataSource)
	healthzUseCaseInterface := biz.NewHealthzUseCase(healthzRepoInterface, logger)
	healthzService := service.NewHealthzService(healthzUseCaseInterface, logger)
	engine := server.NewGinServer(cfg, logger, healthzService)
	return engine, nil
}
